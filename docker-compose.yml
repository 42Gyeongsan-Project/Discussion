version: '3'
services:
  
  nginx:
    container_name: nginx
    image: nginx:1.26.2
    ports:
      - "8001:8001"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ./nginx/index.html:/usr/share/nginx/index.html
      # - ./nginx/pong.js:/usr/share/nginx/pong.js
      - ./django/staticfiles:/usr/share/nginx/
    networks:
      - bridge
    restart: always
    depends_on:
      - django

  django:
    container_name: django
    image: django
    build:
      context: ./django
      dockerfile: Dockerfile
    volumes:
      - ./django:/app
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - OAUTH_ID=${OAUTH_ID}
      - OAUTH_SECRET=${OAUTH_SECRET} 
    expose:
      - "8000"
    networks:
      - bridge
    restart: always
    depends_on:
      postgresql:
        condition: service_healthy

  postgresql:
    container_name: postgresql
    image: postgres:17.0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - bridge
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1s
      timeout: 1s
      retries: 5
      start_period: 1s


networks:
  bridge:
      driver: bridge

volumes:
  django_data:
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/django

  postgres_data:
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/postgres_data 
